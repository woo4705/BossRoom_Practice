// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FbPacket
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public enum FbConnectStatus : short
{
  Undefined = 0,
  Success = 1,
  ServerFull = 2,
  LoggedInAgain = 3,
  UserRequestedDisconnect = 4,
  GenericDisconnect = 5,
  Reconnecting = 6,
  IncompatibleBuildType = 7,
  HostEndedSession = 8,
  StartClientFailed = 9,
};

public struct ConnectionPayload : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ConnectionPayload GetRootAsConnectionPayload(ByteBuffer _bb) { return GetRootAsConnectionPayload(_bb, new ConnectionPayload()); }
  public static ConnectionPayload GetRootAsConnectionPayload(ByteBuffer _bb, ConnectionPayload obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConnectionPayload __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string PlayerId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPlayerIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetPlayerIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetPlayerIdArray() { return __p.__vector_as_array<byte>(4); }
  public string PlayerName { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPlayerNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetPlayerNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetPlayerNameArray() { return __p.__vector_as_array<byte>(6); }
  public bool IsDebug { get { int o = __p.__offset(8); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<FbPacket.ConnectionPayload> CreateConnectionPayload(FlatBufferBuilder builder,
      StringOffset playerIdOffset = default(StringOffset),
      StringOffset playerNameOffset = default(StringOffset),
      bool isDebug = false) {
    builder.StartTable(3);
    ConnectionPayload.AddPlayerName(builder, playerNameOffset);
    ConnectionPayload.AddPlayerId(builder, playerIdOffset);
    ConnectionPayload.AddIsDebug(builder, isDebug);
    return ConnectionPayload.EndConnectionPayload(builder);
  }

  public static void StartConnectionPayload(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddPlayerId(FlatBufferBuilder builder, StringOffset playerIdOffset) { builder.AddOffset(0, playerIdOffset.Value, 0); }
  public static void AddPlayerName(FlatBufferBuilder builder, StringOffset playerNameOffset) { builder.AddOffset(1, playerNameOffset.Value, 0); }
  public static void AddIsDebug(FlatBufferBuilder builder, bool isDebug) { builder.AddBool(2, isDebug, false); }
  public static Offset<FbPacket.ConnectionPayload> EndConnectionPayload(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FbPacket.ConnectionPayload>(o);
  }
}

public struct ConnectionApprovalRequest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ConnectionApprovalRequest GetRootAsConnectionApprovalRequest(ByteBuffer _bb) { return GetRootAsConnectionApprovalRequest(_bb, new ConnectionApprovalRequest()); }
  public static ConnectionApprovalRequest GetRootAsConnectionApprovalRequest(ByteBuffer _bb, ConnectionApprovalRequest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConnectionApprovalRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FbPacket.ConnectionPayload? Payload { get { int o = __p.__offset(4); return o != 0 ? (FbPacket.ConnectionPayload?)(new FbPacket.ConnectionPayload()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<FbPacket.ConnectionApprovalRequest> CreateConnectionApprovalRequest(FlatBufferBuilder builder,
      Offset<FbPacket.ConnectionPayload> payloadOffset = default(Offset<FbPacket.ConnectionPayload>)) {
    builder.StartTable(1);
    ConnectionApprovalRequest.AddPayload(builder, payloadOffset);
    return ConnectionApprovalRequest.EndConnectionApprovalRequest(builder);
  }

  public static void StartConnectionApprovalRequest(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddPayload(FlatBufferBuilder builder, Offset<FbPacket.ConnectionPayload> payloadOffset) { builder.AddOffset(0, payloadOffset.Value, 0); }
  public static Offset<FbPacket.ConnectionApprovalRequest> EndConnectionApprovalRequest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FbPacket.ConnectionApprovalRequest>(o);
  }
}

public struct ConnectionApprovalResponse : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ConnectionApprovalResponse GetRootAsConnectionApprovalResponse(ByteBuffer _bb) { return GetRootAsConnectionApprovalResponse(_bb, new ConnectionApprovalResponse()); }
  public static ConnectionApprovalResponse GetRootAsConnectionApprovalResponse(ByteBuffer _bb, ConnectionApprovalResponse obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConnectionApprovalResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FbPacket.FbConnectStatus Status { get { int o = __p.__offset(4); return o != 0 ? (FbPacket.FbConnectStatus)__p.bb.GetShort(o + __p.bb_pos) : FbPacket.FbConnectStatus.Undefined; } }
  public bool Approved { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<FbPacket.ConnectionApprovalResponse> CreateConnectionApprovalResponse(FlatBufferBuilder builder,
      FbPacket.FbConnectStatus status = FbPacket.FbConnectStatus.Undefined,
      bool approved = false) {
    builder.StartTable(2);
    ConnectionApprovalResponse.AddStatus(builder, status);
    ConnectionApprovalResponse.AddApproved(builder, approved);
    return ConnectionApprovalResponse.EndConnectionApprovalResponse(builder);
  }

  public static void StartConnectionApprovalResponse(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddStatus(FlatBufferBuilder builder, FbPacket.FbConnectStatus status) { builder.AddShort(0, (short)status, 0); }
  public static void AddApproved(FlatBufferBuilder builder, bool approved) { builder.AddBool(1, approved, false); }
  public static Offset<FbPacket.ConnectionApprovalResponse> EndConnectionApprovalResponse(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FbPacket.ConnectionApprovalResponse>(o);
  }
}


}
